{"ast":null,"code":"import axios from 'axios';\nconst API_URL = \"process.env.API_URL\";\nconst TOKEN_KEY = '';\nconst axiosService = () => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Create instance\n  const instance = axios.create(defaultOptions);\n\n  // Set the AUTH token for any request\n  instance.interceptors.request.use(async config => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (publicUrls.some(urlStr => {\n      var _config$url;\n      return config === null || config === void 0 ? void 0 : (_config$url = config.url) === null || _config$url === void 0 ? void 0 : _config$url.includes(urlStr);\n    })) {\n      return config;\n    }\n    if (token) {\n      config.headers.Authorization = token ? `Bearer ${token}` : '';\n    }\n    return config;\n  });\n  instance.interceptors.response.use(response => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, error => {\n    console.error(error);\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error(error.request);\n      if (error.response.status === 401) {\n        localStorage.clear();\n        window.location.reload();\n      }\n      return Promise.reject(error.response);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.error(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error', error.message);\n    }\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n  });\n\n  return instance;\n};\nexport const httpService = axiosService();\nconst publicUrls = [API_URL === null || API_URL === void 0 ? void 0 : API_URL.toString]; // URLs that don't need authorization header","map":{"version":3,"names":["axios","API_URL","TOKEN_KEY","axiosService","defaultOptions","headers","instance","create","interceptors","request","use","config","token","localStorage","getItem","publicUrls","some","urlStr","_config$url","url","includes","Authorization","response","error","console","status","clear","window","location","reload","Promise","reject","message","httpService","toString"],"sources":["/media/mente/F4A81F8DA81F4D8C/projects/pokemondashboard/src/helpers/api-helper.tsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_URL= \"process.env.API_URL\";\nconst TOKEN_KEY= '';\n\n\nconst axiosService = () => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Create instance\n  const instance = axios.create(defaultOptions);\n\n  // Set the AUTH token for any request\n  instance.interceptors.request.use(async (config) => {\n    const token =  localStorage.getItem(TOKEN_KEY);\n\n    if (publicUrls.some((urlStr : any) => config?.url?.includes(urlStr))) {\n      return config;\n    }\n\n    if (token) {\n      config.headers.Authorization = token ? `Bearer ${token}` : '';\n    }\n\n    return config;\n  });\n  instance.interceptors.response.use(\n    (response) => {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      // Do something with response data\n      return response;\n    },\n    (error) => {\n      console.error(error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(error.request);\n\n        if (error.response.status === 401) {\n          localStorage.clear();\n          window.location.reload();\n        }\n        return Promise.reject(error.response);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.error(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error', error.message);\n      }\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\n      // Do something with response error\n    }\n  );\n  return instance;\n};\nexport const httpService = axiosService();\n\nconst publicUrls = [API_URL?.toString]; // URLs that don't need authorization header\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAE,qBAAqB;AACpC,MAAMC,SAAS,GAAE,EAAE;AAGnB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAM,CAACH,cAAc,CAAC;;EAE7C;EACAE,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;IAClD,MAAMC,KAAK,GAAIC,YAAY,CAACC,OAAO,CAACZ,SAAS,CAAC;IAE9C,IAAIa,UAAU,CAACC,IAAI,CAAEC,MAAY;MAAA,IAAAC,WAAA;MAAA,OAAKP,MAAM,aAANA,MAAM,wBAAAO,WAAA,GAANP,MAAM,CAAEQ,GAAG,cAAAD,WAAA,uBAAXA,WAAA,CAAaE,QAAQ,CAACH,MAAM,CAAC;IAAA,EAAC,EAAE;MACpE,OAAON,MAAM;IACf;IAEA,IAAIC,KAAK,EAAE;MACTD,MAAM,CAACN,OAAO,CAACgB,aAAa,GAAGT,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG,EAAE;IAC/D;IAEA,OAAOD,MAAM;EACf,CAAC,CAAC;EACFL,QAAQ,CAACE,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC/BY,QAAQ,IAAK;IACZ;IACA;IACA,OAAOA,QAAQ;EACjB,CAAC,EACAC,KAAK,IAAK;IACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,IAAIA,KAAK,CAACD,QAAQ,EAAE;MAClB;MACA;MACAE,OAAO,CAACD,KAAK,CAACA,KAAK,CAACd,OAAO,CAAC;MAE5B,IAAIc,KAAK,CAACD,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACjCZ,YAAY,CAACa,KAAK,CAAC,CAAC;QACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;MACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAACD,QAAQ,CAAC;IACvC,CAAC,MAAM,IAAIC,KAAK,CAACd,OAAO,EAAE;MACxB;MACA;MACA;MACAe,OAAO,CAACD,KAAK,CAACA,KAAK,CAACd,OAAO,CAAC;IAC9B,CAAC,MAAM;MACL;MACAe,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACS,OAAO,CAAC;IACvC;IACA;IACA;EACF,CACF,CAAC;;EACD,OAAO1B,QAAQ;AACjB,CAAC;AACD,OAAO,MAAM2B,WAAW,GAAG9B,YAAY,CAAC,CAAC;AAEzC,MAAMY,UAAU,GAAG,CAACd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiC,QAAQ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}