{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport { useNotification as useRcNotification } from 'rc-notification';\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { PureContent, getCloseIcon } from './PurePanel';\nimport useStyle from './style';\nimport { getMotion, getPlacementStyle } from './util';\nconst DEFAULT_OFFSET = 24;\nconst DEFAULT_DURATION = 4.5;\nconst Holder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    top,\n    bottom,\n    prefixCls: staticPrefixCls,\n    getContainer: staticGetContainer,\n    maxCount,\n    rtl,\n    onAllRemoved\n  } = props;\n  const {\n    getPrefixCls,\n    getPopupContainer,\n    notification\n  } = React.useContext(ConfigContext);\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  // =============================== Style ===============================\n  const getStyle = placement => getPlacementStyle(placement, top !== null && top !== void 0 ? top : DEFAULT_OFFSET, bottom !== null && bottom !== void 0 ? bottom : DEFAULT_OFFSET);\n  // Style\n  const [, hashId] = useStyle(prefixCls);\n  const getClassName = () => classNames(hashId, {\n    [`${prefixCls}-rtl`]: rtl\n  });\n  // ============================== Motion ===============================\n  const getNotificationMotion = () => getMotion(prefixCls);\n  // ============================== Origin ===============================\n  const [api, holder] = useRcNotification({\n    prefixCls,\n    style: getStyle,\n    className: getClassName,\n    motion: getNotificationMotion,\n    closable: true,\n    closeIcon: getCloseIcon(prefixCls),\n    duration: DEFAULT_DURATION,\n    getContainer: () => (staticGetContainer === null || staticGetContainer === void 0 ? void 0 : staticGetContainer()) || (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer()) || document.body,\n    maxCount,\n    onAllRemoved\n  });\n  // ================================ Ref ================================\n  React.useImperativeHandle(ref, () => Object.assign(Object.assign({}, api), {\n    prefixCls,\n    hashId,\n    notification\n  }));\n  return holder;\n});\n// ==============================================================================\n// ==                                   Hook                                   ==\n// ==============================================================================\nexport function useInternalNotification(notificationConfig) {\n  const holderRef = React.useRef(null);\n  // ================================ API ================================\n  const wrapAPI = React.useMemo(() => {\n    // Wrap with notification content\n    // >>> Open\n    const open = config => {\n      if (!holderRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Notification', 'You are calling notice in render which will break in React 18 concurrent mode. Please trigger in effect instead.') : void 0;\n        return;\n      }\n      const {\n        open: originOpen,\n        prefixCls,\n        hashId,\n        notification\n      } = holderRef.current;\n      const noticePrefixCls = `${prefixCls}-notice`;\n      const {\n          message,\n          description,\n          icon,\n          type,\n          btn,\n          className,\n          style,\n          role = 'alert',\n          closeIcon\n        } = config,\n        restConfig = __rest(config, [\"message\", \"description\", \"icon\", \"type\", \"btn\", \"className\", \"style\", \"role\", \"closeIcon\"]);\n      const realCloseIcon = getCloseIcon(noticePrefixCls, closeIcon);\n      return originOpen(Object.assign(Object.assign({\n        placement: 'topRight'\n      }, restConfig), {\n        content: /*#__PURE__*/React.createElement(PureContent, {\n          prefixCls: noticePrefixCls,\n          icon: icon,\n          type: type,\n          message: message,\n          description: description,\n          btn: btn,\n          role: role\n        }),\n        className: classNames(type && `${noticePrefixCls}-${type}`, hashId, className, notification === null || notification === void 0 ? void 0 : notification.className),\n        style: Object.assign(Object.assign({}, notification === null || notification === void 0 ? void 0 : notification.style), style),\n        closeIcon: realCloseIcon,\n        closable: !!realCloseIcon\n      }));\n    };\n    // >>> destroy\n    const destroy = key => {\n      var _a, _b;\n      if (key !== undefined) {\n        (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.close(key);\n      } else {\n        (_b = holderRef.current) === null || _b === void 0 ? void 0 : _b.destroy();\n      }\n    };\n    const clone = {\n      open,\n      destroy\n    };\n    const keys = ['success', 'info', 'warning', 'error'];\n    keys.forEach(type => {\n      clone[type] = config => open(Object.assign(Object.assign({}, config), {\n        type\n      }));\n    });\n    return clone;\n  }, []);\n  // ============================== Return ===============================\n  return [wrapAPI, /*#__PURE__*/React.createElement(Holder, Object.assign({\n    key: \"notification-holder\"\n  }, notificationConfig, {\n    ref: holderRef\n  }))];\n}\nexport default function useNotification(notificationConfig) {\n  return useInternalNotification(notificationConfig);\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","useNotification","useRcNotification","React","warning","ConfigContext","PureContent","getCloseIcon","useStyle","getMotion","getPlacementStyle","DEFAULT_OFFSET","DEFAULT_DURATION","Holder","forwardRef","props","ref","top","bottom","prefixCls","staticPrefixCls","getContainer","staticGetContainer","maxCount","rtl","onAllRemoved","getPrefixCls","getPopupContainer","notification","useContext","getStyle","placement","hashId","getClassName","getNotificationMotion","api","holder","style","className","motion","closable","closeIcon","duration","document","body","useImperativeHandle","assign","useInternalNotification","notificationConfig","holderRef","useRef","wrapAPI","useMemo","open","config","current","process","env","NODE_ENV","originOpen","noticePrefixCls","message","description","icon","type","btn","role","restConfig","realCloseIcon","content","createElement","destroy","key","_a","_b","undefined","close","clone","keys","forEach"],"sources":["/media/mente/F4A81F8DA81F4D8C/projects/pokemondashboard/node_modules/antd/es/notification/useNotification.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport { useNotification as useRcNotification } from 'rc-notification';\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport { PureContent, getCloseIcon } from './PurePanel';\nimport useStyle from './style';\nimport { getMotion, getPlacementStyle } from './util';\nconst DEFAULT_OFFSET = 24;\nconst DEFAULT_DURATION = 4.5;\nconst Holder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    top,\n    bottom,\n    prefixCls: staticPrefixCls,\n    getContainer: staticGetContainer,\n    maxCount,\n    rtl,\n    onAllRemoved\n  } = props;\n  const {\n    getPrefixCls,\n    getPopupContainer,\n    notification\n  } = React.useContext(ConfigContext);\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  // =============================== Style ===============================\n  const getStyle = placement => getPlacementStyle(placement, top !== null && top !== void 0 ? top : DEFAULT_OFFSET, bottom !== null && bottom !== void 0 ? bottom : DEFAULT_OFFSET);\n  // Style\n  const [, hashId] = useStyle(prefixCls);\n  const getClassName = () => classNames(hashId, {\n    [`${prefixCls}-rtl`]: rtl\n  });\n  // ============================== Motion ===============================\n  const getNotificationMotion = () => getMotion(prefixCls);\n  // ============================== Origin ===============================\n  const [api, holder] = useRcNotification({\n    prefixCls,\n    style: getStyle,\n    className: getClassName,\n    motion: getNotificationMotion,\n    closable: true,\n    closeIcon: getCloseIcon(prefixCls),\n    duration: DEFAULT_DURATION,\n    getContainer: () => (staticGetContainer === null || staticGetContainer === void 0 ? void 0 : staticGetContainer()) || (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer()) || document.body,\n    maxCount,\n    onAllRemoved\n  });\n  // ================================ Ref ================================\n  React.useImperativeHandle(ref, () => Object.assign(Object.assign({}, api), {\n    prefixCls,\n    hashId,\n    notification\n  }));\n  return holder;\n});\n// ==============================================================================\n// ==                                   Hook                                   ==\n// ==============================================================================\nexport function useInternalNotification(notificationConfig) {\n  const holderRef = React.useRef(null);\n  // ================================ API ================================\n  const wrapAPI = React.useMemo(() => {\n    // Wrap with notification content\n    // >>> Open\n    const open = config => {\n      if (!holderRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Notification', 'You are calling notice in render which will break in React 18 concurrent mode. Please trigger in effect instead.') : void 0;\n        return;\n      }\n      const {\n        open: originOpen,\n        prefixCls,\n        hashId,\n        notification\n      } = holderRef.current;\n      const noticePrefixCls = `${prefixCls}-notice`;\n      const {\n          message,\n          description,\n          icon,\n          type,\n          btn,\n          className,\n          style,\n          role = 'alert',\n          closeIcon\n        } = config,\n        restConfig = __rest(config, [\"message\", \"description\", \"icon\", \"type\", \"btn\", \"className\", \"style\", \"role\", \"closeIcon\"]);\n      const realCloseIcon = getCloseIcon(noticePrefixCls, closeIcon);\n      return originOpen(Object.assign(Object.assign({\n        placement: 'topRight'\n      }, restConfig), {\n        content: /*#__PURE__*/React.createElement(PureContent, {\n          prefixCls: noticePrefixCls,\n          icon: icon,\n          type: type,\n          message: message,\n          description: description,\n          btn: btn,\n          role: role\n        }),\n        className: classNames(type && `${noticePrefixCls}-${type}`, hashId, className, notification === null || notification === void 0 ? void 0 : notification.className),\n        style: Object.assign(Object.assign({}, notification === null || notification === void 0 ? void 0 : notification.style), style),\n        closeIcon: realCloseIcon,\n        closable: !!realCloseIcon\n      }));\n    };\n    // >>> destroy\n    const destroy = key => {\n      var _a, _b;\n      if (key !== undefined) {\n        (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.close(key);\n      } else {\n        (_b = holderRef.current) === null || _b === void 0 ? void 0 : _b.destroy();\n      }\n    };\n    const clone = {\n      open,\n      destroy\n    };\n    const keys = ['success', 'info', 'warning', 'error'];\n    keys.forEach(type => {\n      clone[type] = config => open(Object.assign(Object.assign({}, config), {\n        type\n      }));\n    });\n    return clone;\n  }, []);\n  // ============================== Return ===============================\n  return [wrapAPI, /*#__PURE__*/React.createElement(Holder, Object.assign({\n    key: \"notification-holder\"\n  }, notificationConfig, {\n    ref: holderRef\n  }))];\n}\nexport default function useNotification(notificationConfig) {\n  return useInternalNotification(notificationConfig);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}